name: Add TikTok Events Tracking

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

jobs:
  inject-events:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create TikTok Events Script
        run: |
          # Create the events tracking script for photography website
          cat > tiktok-events.js << 'EOF'
          // TikTok Events Tracking for Photography Website
          
          // Track page views on all pages
          ttq.track('ViewContent', {
            "contents": [
              {
                "content_type": "product", 
                "content_category": "photography",
                "content_name": document.title || "Photography Page"
              }
            ],
            "description": "Photography website page view"
          });
          
          // Track contact form submissions
          function trackContactForm() {
            ttq.track('CompleteRegistration', {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": "Contact Form Submission"
                }
              ],
              "description": "Contact form completed"
            });
          }
          
          // Track portfolio/gallery views
          function trackPortfolioView(portfolioName) {
            ttq.track('ViewContent', {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": portfolioName || "Portfolio View"
                }
              ],
              "description": "Portfolio gallery viewed"
            });
          }
          
          // Track booking/inquiry actions
          function trackBookingInquiry() {
            ttq.track('InitiateCheckout', {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": "Photography Booking Inquiry"
                }
              ],
              "description": "Photography booking inquiry initiated"
            });
          }
          
          // Track service page views
          function trackServiceView(serviceName) {
            ttq.track('ViewContent', {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": serviceName || "Photography Service"
                }
              ],
              "description": "Photography service page viewed"
            });
          }
          
          // Auto-track common events when page loads
          document.addEventListener('DOMContentLoaded', function() {
            // Track contact form submissions
            const contactForms = document.querySelectorAll('form[action*="contact"], form.contact-form, #contact-form');
            contactForms.forEach(form => {
              form.addEventListener('submit', trackContactForm);
            });
            
            // Track booking forms
            const bookingForms = document.querySelectorAll('form[action*="book"], form.booking-form, #booking-form');
            bookingForms.forEach(form => {
              form.addEventListener('submit', trackBookingInquiry);
            });
            
            // Track portfolio clicks
            const portfolioLinks = document.querySelectorAll('a[href*="portfolio"], a[href*="gallery"], .portfolio-link, .gallery-link');
            portfolioLinks.forEach(link => {
              link.addEventListener('click', function() {
                trackPortfolioView(this.textContent || this.getAttribute('data-portfolio-name'));
              });
            });
            
            // Auto-detect service pages and track views
            const currentPath = window.location.pathname.toLowerCase();
            if (currentPath.includes('wedding')) {
              trackServiceView('Wedding Photography');
            } else if (currentPath.includes('portrait')) {
              trackServiceView('Portrait Photography');
            } else if (currentPath.includes('event')) {
              trackServiceView('Event Photography');
            } else if (currentPath.includes('commercial')) {
              trackServiceView('Commercial Photography');
            } else if (currentPath.includes('service')) {
              trackServiceView('Photography Services');
            }
          });
          EOF
          
      - name: Inject TikTok Events into HTML files
        run: |
          # Inject the events script before </body> in all HTML files
          for f in $(find . -name "*.html"); do
            if ! grep -q "TikTok Events Tracking" "$f"; then
              # Create the script tag with the events code
              EVENTS_SCRIPT='<script>
          // TikTok Events Tracking for Photography Website
          
          // Track page views on all pages
          ttq.track("ViewContent", {
            "contents": [
              {
                "content_type": "product", 
                "content_category": "photography",
                "content_name": document.title || "Photography Page"
              }
            ],
            "description": "Photography website page view"
          });
          
          // Track contact form submissions
          function trackContactForm() {
            ttq.track("CompleteRegistration", {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": "Contact Form Submission"
                }
              ],
              "description": "Contact form completed"
            });
          }
          
          // Track portfolio/gallery views
          function trackPortfolioView(portfolioName) {
            ttq.track("ViewContent", {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": portfolioName || "Portfolio View"
                }
              ],
              "description": "Portfolio gallery viewed"
            });
          }
          
          // Track booking/inquiry actions
          function trackBookingInquiry() {
            ttq.track("InitiateCheckout", {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": "Photography Booking Inquiry"
                }
              ],
              "description": "Photography booking inquiry initiated"
            });
          }
          
          // Track service page views
          function trackServiceView(serviceName) {
            ttq.track("ViewContent", {
              "contents": [
                {
                  "content_type": "product",
                  "content_category": "photography",
                  "content_name": serviceName || "Photography Service"
                }
              ],
              "description": "Photography service page viewed"
            });
          }
          
          // Auto-track common events when page loads
          document.addEventListener("DOMContentLoaded", function() {
            // Track contact form submissions
            const contactForms = document.querySelectorAll("form[action*=\"contact\"], form.contact-form, #contact-form");
            contactForms.forEach(form => {
              form.addEventListener("submit", trackContactForm);
            });
            
            // Track booking forms
            const bookingForms = document.querySelectorAll("form[action*=\"book\"], form.booking-form, #booking-form");
            bookingForms.forEach(form => {
              form.addEventListener("submit", trackBookingInquiry);
            });
            
            // Track portfolio clicks
            const portfolioLinks = document.querySelectorAll("a[href*=\"portfolio\"], a[href*=\"gallery\"], .portfolio-link, .gallery-link");
            portfolioLinks.forEach(link => {
              link.addEventListener("click", function() {
                trackPortfolioView(this.textContent || this.getAttribute("data-portfolio-name"));
              });
            });
            
            // Auto-detect service pages and track views
            const currentPath = window.location.pathname.toLowerCase();
            if (currentPath.includes("wedding")) {
              trackServiceView("Wedding Photography");
            } else if (currentPath.includes("portrait")) {
              trackServiceView("Portrait Photography");
            } else if (currentPath.includes("event")) {
              trackServiceView("Event Photography");
            } else if (currentPath.includes("commercial")) {
              trackServiceView("Commercial Photography");
            } else if (currentPath.includes("service")) {
              trackServiceView("Photography Services");
            }
          });
          </script>'
              
              # Use awk to insert the script before </body>
              awk -v script="$EVENTS_SCRIPT" '/<\/body>/ {print script} {print}' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
              echo "Added TikTok events tracking to $f"
            else
              echo "TikTok events already present in $f"
            fi
          done
          
      - name: Commit changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add TikTok events tracking to all HTML pages"
            git push
          fi
